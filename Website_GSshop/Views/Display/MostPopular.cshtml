@using Website_GSshop.Models
@model List<Product>
<center>
    <div class="container-fluid">
        <h2 class="head-style-2">
            <img src="~/Content/Layout/images/icons8-fire-48.png" />Tìm kiếm phổ biến
        </h2>
        <br />
        <div class="btn-22">
            <a href=""><span class="span">Hover over me</span></a>
        </div>
        <br />
        <br />
        <div class="layout">
            <section class="inner">
                <ul class="grid">
                    @for (var i = 0; i < 5; i++)
                    {
                        <li class="grid-tile">
                            <div class="item">
                                <div class="pnl-favorites">
                                    <div class="pnl-ic-wrapper">
                                        <span class="pnl-ic"><svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve"><path d="M22.6,6.5c-2.9,0-5.4,1.7-6.6,4.1c-1.2-2.4-3.7-4.1-6.6-4.1C5.3,6.5,2,9.8,2,13.9C2,23.7,15.8,29,15.8,29S30,23.6,30,13.9C30,9.8,26.7,6.5,22.6,6.5L22.6,6.5z"></path></svg></span>
                                    </div>
                                </div>
                                <div class="item-img" style="background-color: #ffff00; background-image: url('http://store.moma.org/dw/image/v2/BBQC_PRD/on/demandware.static/-/Sites-master-moma/default/dw952014b1/images/96511_a.jpg'); background-size: contain;"></div>
                                <div class="item-pnl">
                                    <div class="pnl-wrapper">
                                        <div class="pnl-description">
                                            <span class="pnl-label">Product Name</span>
                                            <span class="pnl-price"><s class="text-danger">$120,00</s> &nbsp;$100,00</span>
                                        </div>
                                        <div class="pnl-tocart1">
                                            <div class="pnl-ic-wrapper">
                                                <span class="pnl-ic"><svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 32 32" style="enable-background:new 0 0 32 32;" xml:space="preserve"><g><path d="M25.4,29H6.6c-1.7,0-3-1.4-2.8-2.9l1.9-13.8C5.9,11,6.6,10,8,10h16c1.4,0,2.1,1,2.3,2.3l1.9,13.8 C28.4,27.6,27.1,29,25.4,29z"></path><path d="M10.6,12.7V8.4C10.6,5.4,13,3,16,3h0c3,0,5.4,2.4,5.4,5.4v4.3"></path></g></svg></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </section>
        </div>
    </div>
</center>
<script>
    'use strict';

    function isIOSSafari() {
        var userAgent;
        userAgent = window.navigator.userAgent;
        return userAgent.match(/iPad/i) || userAgent.match(/iPhone/i);
    };

    function isTouch() {
        var isIETouch;
        isIETouch = navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
        return [].indexOf.call(window, 'ontouchstart') >= 0 || isIETouch;
    };

    var isIOS = isIOSSafari(),
        clickHandler = isIOS || isTouch() ? 'touchstart' : 'click';

    function extend(a, b) {
        for (var key in b) {
            if (b.hasOwnProperty(key)) {
                a[key] = b[key];
            }
        }
        return a;
    }

    function Anima(el, options) {
        this.el = el;
        this.options = extend({}, this.options);
        extend(this.options, options);

        this.checked = false;

        this.timeline = new mojs.Timeline();

        for (var i = 0, len = this.options.tweens.length; i < len; ++i) {
            this.timeline.add(this.options.tweens[i]);
        }

        var self = this;
        this.el.addEventListener(clickHandler, function () {
            if (self.checked) {
                self.options.onUnCheck();
            }
            else {
                self.options.onCheck();
                self.timeline.start();
            }
            self.checked = !self.checked;
        });
    }

    Anima.prototype.options = {
        tweens: [
            new mojs.Burst({
                shape: 'circle',
                isRunLess: true
            })
        ],
        onCheck: function () { return false; },
        onUnCheck: function () { return false; }
    };

    function createHeartIc(el) {
        var el = el,
            span = el.querySelector('span'),
            svg = span.querySelector('svg'),
            opacityCurve = mojs.easing.path('M0,0 C0,87 27,100 40,100 L40,0 L100,0'),
            scaleCurve = mojs.easing.path('M0,0c0,80,39.2,100,39.2,100L40-100c0,0-0.7,106,60,106'),
            burst = new mojs.Burst({
                parent: el,
                duration: 1200,
                delay: 200,
                shape: 'circle',
                fill: '#E87171',
                x: '50%', y: '50%',
                opacity: { 1: 0 },
                childOptions: {
                    radius: { 6: 0 },
                    type: 'line',
                    stroke: '#E87171',
                    strokeWidth: 2
                },
                radius: { 0: 32 },
                count: 7,
                //isSwirl: true,
                isRunLess: true,
                easing: mojs.easing.bezier(0.1, 1, 0.3, 1)
            }),
            heart = new Anima(el, {
                tweens: [
                    /* // ring animation
                    new mojs.Transit({
                        parent: el11,
                        duration: 1000,
                        delay: 100,
                        type: 'circle',
                        radius: {0: 95},
                        fill: 'transparent',
                        stroke: '#C0C1C3',
                        strokeWidth: {50:0},
                        opacity: 0.4,
                        x: '50%',     
                        y: '50%',
                        isRunLess: true,
                        easing: mojs.easing.bezier(0, 1, 0.5, 1)
                    }),
                    // ring animation
                    new mojs.Transit({
                        parent: el11,
                        duration: 1800,
                        delay: 300,
                        type: 'circle',
                        radius: {0: 80},
                        fill: 'transparent',
                        stroke: '#C0C1C3',
                        strokeWidth: {40:0},
                        opacity: 0.2,
                        x: '50%',     
                        y: '50%',
                        isRunLess: true,
                        easing: mojs.easing.bezier(0, 1, 0.5, 1)
                    }), */
                    // icon scale animation

                    burst,

                    new mojs.Tween({
                        duration: 800,
                        easing: mojs.easing.ease.out,
                        onUpdate: function (progress) {
                            var opacityProgress = opacityCurve(progress);
                            span.style.opacity = opacityProgress;

                            var scaleProgress = scaleCurve(progress);
                            span.style.WebkitTransform = span.style.transform = 'scale3d(' + scaleProgress + ',' + scaleProgress + ',1)';

                            var colorProgress = opacityCurve(progress);
                            svg.style.fill = colorProgress >= 1 ? '#E87171' : 'none';
                            svg.style.stroke = colorProgress >= 1 ? '#E87171' : '#a1a8ad';
                        }
                    })
                ],
                onUnCheck: function () {
                    svg.style.fill = 'none';
                    svg.style.stroke = '#a1a8ad';
                }
            });

        return heart;
    }


    function createCartIc(el) {
        var el = el,
            span = el.querySelector('span'),
            svg = span.querySelector('svg'),
            body = svg.getElementsByTagName("path")[0],
            opacityCurve = mojs.easing.path('M0,0 C0,87 27,100 40,100 L40,0 L100,0'),
            scaleCurve = mojs.easing.path('M0,0c0,80,39.2,100,39.2,100L40-100c0,0-0.7,106,60,106'),
            burst = new mojs.Burst({
                parent: el,
                duration: 1200,
                delay: 200,
                shape: 'circle',
                fill: '#111111',
                x: '50%', y: '50%',
                opacity: { 1: 0 },
                childOptions: {
                    radius: { 6: 2 },
                    type: 'line',
                    stroke: '#111111',
                    strokeWidth: 2
                },
                radius: { 0: 36 },
                angle: 45,
                count: 4,
                //isSwirl: true,
                isRunLess: true,
                easing: mojs.easing.bezier(0.1, 1, 0.3, 1)
            }),
            heart = new Anima(el, {
                tweens: [
                    /* // ring animation
                    new mojs.Transit({
                        parent: el11,
                        duration: 1000,
                        delay: 100,
                        type: 'circle',
                        radius: {0: 95},
                        fill: 'transparent',
                        stroke: '#C0C1C3',
                        strokeWidth: {50:0},
                        opacity: 0.4,
                        x: '50%',     
                        y: '50%',
                        isRunLess: true,
                        easing: mojs.easing.bezier(0, 1, 0.5, 1)
                    }),
                    // ring animation
                    new mojs.Transit({
                        parent: el11,
                        duration: 1800,
                        delay: 300,
                        type: 'circle',
                        radius: {0: 80},
                        fill: 'transparent',
                        stroke: '#C0C1C3',
                        strokeWidth: {40:0},
                        opacity: 0.2,
                        x: '50%',     
                        y: '50%',
                        isRunLess: true,
                        easing: mojs.easing.bezier(0, 1, 0.5, 1)
                    }), */
                    // icon scale animation

                    burst,

                    new mojs.Tween({
                        duration: 800,
                        easing: mojs.easing.ease.out,
                        onUpdate: function (progress) {
                            var opacityProgress = opacityCurve(progress);
                            span.style.opacity = opacityProgress;

                            var scaleProgress = scaleCurve(progress);
                            span.style.WebkitTransform = span.style.transform = 'scale3d(' + scaleProgress + ',' + scaleProgress + ',1)';

                            var colorProgress = opacityCurve(progress);
                            body.style.fill = colorProgress >= 1 ? '#111111' : 'none';
                            svg.style.stroke = colorProgress >= 1 ? '#111111' : '#a1a8ad';
                        }
                    })
                ],
                onUnCheck: function () {
                    body.style.fill = 'none';
                    svg.style.stroke = '#a1a8ad';
                }
            });

        return heart;
    }


    var hearts = document.getElementsByClassName('pnl-favorites'),
        carts = document.getElementsByClassName('pnl-tocart');

    for (var i = 0; i < hearts.length; i++) {
        createHeartIc(hearts[i].querySelector('div'));
        createCartIc(carts[i].querySelector('div'));
    }
</script>
<br />
<br />
